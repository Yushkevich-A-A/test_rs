{"version":3,"sources":["Components/Buttons/ButtonGrey/ButtonGrey.js","Components/BunknotesCounter/BunknotesCounter.js","Components/Banknotes/Fifty/Fifty.js","Components/Banknotes/Hundred/Hundred.js","Components/Banknotes/TwoHundred/TwoHundred.js","Components/Banknotes/FiveHundred/FiveHundred.js","Components/Banknotes/Thousand/Thousand.js","Components/Banknotes/TwoThousand/TwoThousand.js","Components/Banknotes/FiveThousand/FiveThousand.js","Components/VisionAllBunknotes/VisionAllBunknotes.js","Components/VisiableComponents/Reference/Reference.js","Components/Buttons/ButtonGreen/ButtonGreen.js","Components/VisiableComponents/SetListBanknotes/SetListBanknotes.js","reduxFold/actions/actionCreator.js","Components/Numpad/ButtonNumpad/ButtonNumpad.js","Components/Numpad/Numpad.js","functions/functions.js","Components/Forms/FormSum/FormSum.js","Components/VisiableComponents/BlockButtonMode/BlockButtonMode.js","Components/VisiableComponents/InfoOutputFields/InfoOutputFields.js","pages/MainPage/MainPage.js","App.js","reportWebVitals.js","DB/setsBanknotes.js","reduxFold/reducers/serviceBanknotesReducer/serviceBanknotesReducer.js","reduxFold/store/index.js","index.js"],"names":["ButtonGrey","props","name","handleClick","className","onClick","toLowerCase","defaultProps","console","log","BunknotesCounter","count","children","Fifty","Hundred","TwoHundred","FiveHundred","Thousand","TwoThousand","FiveThousand","VisionAllBunknotes","banknotes","fifty","hundred","twoHundred","fiveHundred","thousand","twoThousand","fiveThousand","Reference","useSelector","state","serviceBanknotes","ButtonGreen","typeButton","type","SetListBanknotes","handleTriggerMode","amountSets","dispatch","useDispatch","setsBancnotesList","Array","fill","map","item","id","nanoid","index","payload","changeSetBanknotes","ButtonNumpad","value","Numpad","addValue","removeValue","getAmountBanknotesAndRemains","banknote","avaliableBanknotes","banknotesCount","remainsValue","resultAmount","FormSum","inputSum","useState","setValue","currentRef","useRef","useEffect","requiredSum","parseFloat","currentBanknotes","requiredBanknotes","arrayBanknotes","arrayKeysInObject","Object","keys","reverse","sumInBank","ind","reduce","sum","acc","remains","forEach","textNameBanknotes","parserBanknotes","cancelleAmount","inputRequestSum","onSubmit","e","preventDefault","htmlFor","onChange","inputValue","target","replace","placeholder","ref","maxLength","val","current","focus","toString","includes","length","slice","BlockButtonMode","mode","setMode","InfoOutputFields","sumToIssue","toFixed","MainPage","referense","setReference","handleTriggerReference","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","setsBanknotes","initState","reducer","combineReducers","action","requiredBanknotesCount","banknotesArray","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c0da8761.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './ButtonGrey.css';\r\n\r\nfunction ButtonGrey(props) {\r\n    const { name, handleClick } = props;\r\n    return (\r\n        <button className='button-grey' onClick={handleClick}>\r\n            {name.toLowerCase()}\r\n        </button>\r\n    )\r\n}\r\n\r\nButtonGrey.defaultProps = {\r\n    name: 'Кнопка',\r\n    handleClick: () => {console.log('click')},\r\n};\r\n\r\nButtonGrey.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    handleClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ButtonGrey;\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './BunknotesCounter.css';\r\n\r\nfunction BunknotesCounter(props) {\r\n    const { count } = props;\r\n\r\n    return (\r\n        <div className=\"banknotes-count-block\">\r\n            {props.children}\r\n            <div className=\"banknotes-count-text-block\">\r\n                <span className=\"banknotes-count-text\">{count}</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nBunknotesCounter.defaultProps = {\r\n    count: 0,\r\n};\r\n\r\nBunknotesCounter.propTypes = {\r\n\r\n};\r\n\r\nexport default BunknotesCounter;\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Fifty.css';\r\n\r\nfunction Fifty(props) {\r\n    return (\r\n           <div className='banknote-fifty'>\r\n                <span className=\"banknote-fifty-span\">\r\n                    50\r\n                </span>\r\n            </div> \r\n    )\r\n}\r\n\r\nFifty.propTypes = {\r\n\r\n};\r\n\r\nexport default Fifty;\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Hundred.css'\r\n\r\nfunction Hundred(props) {\r\n    return (\r\n        <div className='banknote-hundred'>\r\n            <span className=\"banknote-hundred-span\">\r\n                100\r\n            </span>\r\n        </div> \r\n    )\r\n}\r\n\r\nHundred.propTypes = {\r\n\r\n};\r\n\r\nexport default Hundred;\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './TwoHundred.css';\r\n\r\nfunction TwoHundred(props) {\r\n    return (\r\n        <div className='banknote-twohundred'>\r\n            <span className=\"banknote-twohundred-span\">\r\n                200\r\n            </span>\r\n        </div> \r\n    )\r\n}\r\n\r\nTwoHundred.propTypes = {\r\n\r\n};\r\n\r\nexport default TwoHundred;\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './FiveHundred.css';\r\n\r\nfunction FiveHundred(props) {\r\n    return (\r\n        <div className='banknote-fivehundred'>\r\n            <span className=\"banknote-fivehundred-span\">\r\n                500\r\n            </span>\r\n        </div> \r\n    )\r\n}\r\n\r\nFiveHundred.propTypes = {\r\n\r\n};\r\n\r\nexport default FiveHundred;\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Thousand.css';\r\n\r\nfunction Thousand(props) {\r\n    return (\r\n        <div className='banknote-thousand'>\r\n            <span className=\"banknote-thousand-span\">\r\n                1000\r\n            </span>\r\n        </div> \r\n    )\r\n}\r\n\r\nThousand.propTypes = {\r\n\r\n};\r\n\r\nexport default Thousand;\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './TwoThousand.css';\r\n\r\nfunction TwoThousand(props) {\r\n    return (\r\n        <div className='banknote-twothousand'>\r\n            <span className=\"banknote-twothousand-span\">\r\n                2000\r\n            </span>\r\n        </div> \r\n    )\r\n}\r\n\r\nTwoThousand.propTypes = {\r\n\r\n};\r\n\r\nexport default TwoThousand;\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './FiveThousand.css';\r\n\r\nfunction FiveThousand(props) {\r\n    return (\r\n        <div className='banknote-fivethousand'>\r\n            <span className=\"banknote-fivethousand-span\">\r\n                5000\r\n            </span>\r\n        </div> \r\n    )\r\n}\r\n\r\nFiveThousand.propTypes = {\r\n\r\n};\r\n\r\nexport default FiveThousand;\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport BunknotesCounter from '../BunknotesCounter/BunknotesCounter';\r\nimport Fifty from '../Banknotes/Fifty/Fifty';\r\nimport Hundred from '../Banknotes/Hundred/Hundred';\r\nimport TwoHundred from '../Banknotes/TwoHundred/TwoHundred';\r\nimport FiveHundred from '../Banknotes/FiveHundred/FiveHundred';\r\nimport Thousand from '../Banknotes/Thousand/Thousand';\r\nimport TwoThousand from '../Banknotes/TwoThousand/TwoThousand';\r\nimport FiveThousand from '../Banknotes/FiveThousand/FiveThousand';\r\nimport './VisionAllBunknotes.css';\r\n\r\nfunction VisionAllBunknotes(props) {\r\n    const { banknotes } = props;\r\n    \r\n    return (\r\n        <div className='block-vision-all-banknotes'>\r\n            <BunknotesCounter count={banknotes.fifty}>\r\n                <Fifty /> \r\n            </BunknotesCounter>\r\n            <BunknotesCounter count={banknotes.hundred}>\r\n                <Hundred /> \r\n            </BunknotesCounter>\r\n            <BunknotesCounter count={banknotes.twoHundred}>\r\n                <TwoHundred /> \r\n            </BunknotesCounter>\r\n            <BunknotesCounter count={banknotes.fiveHundred}>\r\n                <FiveHundred /> \r\n            </BunknotesCounter>\r\n            <BunknotesCounter count={banknotes.thousand}>\r\n                <Thousand /> \r\n            </BunknotesCounter>\r\n            <BunknotesCounter count={banknotes.twoThousand}>\r\n                <TwoThousand /> \r\n            </BunknotesCounter>\r\n            <BunknotesCounter count={banknotes.fiveThousand}>\r\n                <FiveThousand /> \r\n            </BunknotesCounter>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nVisionAllBunknotes.defaultProps = {\r\n    banknotes: {\r\n        fifty: 0,\r\n        hundred: 0,\r\n        twoHundred: 0,\r\n        fiveHundred: 0,\r\n        thousand: 0,\r\n        twoThousand: 0,\r\n        fiveThousand: 0,\r\n    }\r\n}\r\n\r\nVisionAllBunknotes.propTypes = {\r\n\r\n};\r\n\r\nexport default VisionAllBunknotes;\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Reference.css';\r\nimport VisionAllBunknotes from '../../VisionAllBunknotes/VisionAllBunknotes';\r\nimport { useSelector } from 'react-redux';\r\n\r\nfunction Reference(props) {\r\n    const { banknotes } = useSelector( state => state.serviceBanknotes);\r\n    \r\n    const { handleClick } = props;\r\n\r\n    return (\r\n        <div className=\"reference-wrapper\">\r\n            <div className='reference'>\r\n                <div className=\"reference-title\">\r\n                    Колличество купюр в банкомате:\r\n                </div>\r\n                <div className=\"reference-all-banknotes\">\r\n                     <VisionAllBunknotes banknotes={banknotes}/>\r\n                </div>\r\n                <button className='close-reference' onClick={handleClick}></button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nReference.propTypes = {\r\n\r\n};\r\n\r\nexport default Reference;\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './ButtonGreen.css';\r\n\r\nfunction ButtonGreen(props) {\r\n    const { name, handleClick, typeButton } = props;\r\n    return (\r\n        <button type={typeButton} className='button-green' onClick={handleClick}>\r\n            {name.toLowerCase()}\r\n        </button>\r\n    )\r\n}\r\n\r\nButtonGreen.defaultProps = {\r\n    typeButton: 'button',\r\n }\r\n\r\nButtonGreen.propTypes = {\r\n    \r\n};\r\n\r\nexport default ButtonGreen;\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './SetListBanknotes.css';\r\nimport { useSelector } from 'react-redux';\r\nimport { nanoid } from 'nanoid';\r\nimport { useDispatch } from 'react-redux';\r\nimport { changeSetBanknotes } from '../../../reduxFold/actions/actionCreator';\r\n\r\nfunction SetListBanknotes(props) {\r\n    const { handleTriggerMode } = props;\r\n    const { amountSets } = useSelector( state => state.serviceBanknotes);\r\n    const dispatch = useDispatch();\r\n    const setsBancnotesList = new Array(amountSets).fill({}).map( item => { return {...item, id:nanoid() }});\r\n    const handleClick = (id) => {\r\n        handleTriggerMode(false);\r\n        dispatch(changeSetBanknotes(id))\r\n    }\r\n\r\n    return (\r\n        <div className='sets-banknotes'>\r\n            {\r\n                setsBancnotesList.map((item, index) => <div className=\"set-banknotes\" \r\n                    key={item.id} onClick={() => handleClick(index)}>\r\n                        {console.log(item)}\r\n                    Набор {index + 1}\r\n                    </div>)\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nSetListBanknotes.propTypes = {\r\n\r\n};\r\n\r\nexport default SetListBanknotes;\r\n\r\n","export const changeSetBanknotes = (id) => {\r\n    return { type: 'CHANGE_SET_BUNKNOTES', payload: {id} };\r\n}\r\n\r\nexport const inputRequestSum = (inputSum, requiredBanknotes, cancelleAmount) => {\r\n    return { type: 'INPUT_REQUEST_SUM', payload: {inputSum, requiredBanknotes, cancelleAmount} };\r\n}\r\n\r\nexport const withdrawalOfTheAmount = () => {\r\n    return { type: 'WITHDRAWAL_OF_THE_AMOUNT' };\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './ButtonNumpad.css';\r\n\r\nfunction ButtonNumpad(props) {\r\n    const { value, handleClick } = props;\r\n\r\n    \r\n    const handleNumpadClick = () => {\r\n        handleClick(value);\r\n    }\r\n\r\n    return (\r\n        <div className='button-num' onClick={handleNumpadClick}>\r\n            <span className=\"button-num-text\">\r\n                {value}\r\n            </span>\r\n        </div>\r\n    )\r\n}\r\n\r\nButtonNumpad.propTypes = {\r\n\r\n}\r\n\r\nexport default ButtonNumpad\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Numpad.css';\r\nimport ButtonNumpad from './ButtonNumpad/ButtonNumpad';\r\n\r\nfunction Numpad(props) {\r\n    const { addValue, removeValue } = props;\r\n\r\n    const buttonsPad = [ 1, 2, 3, 'del', 4, 5, 6, '.', 7, 8, 9, 0 ]\r\n    return (\r\n        <div className='numpad'>\r\n            {\r\n                buttonsPad.map( item => <ButtonNumpad key={item} \r\n                    value={item} handleClick={ item !== 'del' ? addValue : removeValue }/>)\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nNumpad.propTypes = {\r\n\r\n};\r\n\r\nexport default Numpad;\r\n\r\n","export function parserBanknotes(value, currentBanknotes) {\r\n    const requiredBanknotes = {\r\n        fifty: 0,\r\n        hundred: 0,\r\n        twoHundred: 0,\r\n        fiveHundred: 0,\r\n        thousand: 0,\r\n        twoThousand: 0,\r\n        fiveThousand: 0,\r\n    };\r\n\r\n    const arrayBanknotes = [5000, 2000, 1000, 500, 200, 100, 50];\r\n    const arrayKeysInObject = Object.keys(requiredBanknotes).reverse();\r\n    const sumInBank = arrayBanknotes.map(\r\n        (item, ind) => item * currentBanknotes[arrayKeysInObject[ind]]\r\n        ).reduce( (sum, acc) => sum + acc, 0 );\r\n    if ( sumInBank <= value) {\r\n        const remains = value - sumInBank;;\r\n        const requiredBanknotes = {...currentBanknotes};\r\n        return { requiredBanknotes, remains };\r\n    }\r\n\r\n    let remains = value;\r\n\r\n    arrayBanknotes.forEach( (item, index) => {\r\n        if (remains >= item ) {\r\n            const textNameBanknotes = arrayKeysInObject[index];\r\n            const { remainsValue, banknotesCount } = getAmountBanknotesAndRemains(remains, item, currentBanknotes[textNameBanknotes] );\r\n            remains = remainsValue;\r\n            requiredBanknotes[textNameBanknotes] = banknotesCount;\r\n        }\r\n    } );\r\n        return { requiredBanknotes, remains }\r\n}   \r\n\r\n// при использовании алгоритма где в равной степени расходуются купюры, эта функция бесполезна\r\n\r\nconst getAmountBanknotesAndRemains = (value, banknote, avaliableBanknotes) => {\r\n    let banknotesCount = null;\r\n    let remainsValue = value % banknote;\r\n    const resultAmount = (value - remainsValue) / banknote;\r\n    if (avaliableBanknotes < resultAmount) {\r\n        remainsValue = (resultAmount - avaliableBanknotes) * banknote + remainsValue;\r\n        banknotesCount = avaliableBanknotes;\r\n    } else {\r\n        banknotesCount = resultAmount;\r\n    }\r\n    return { remainsValue, banknotesCount }\r\n}","import React, { useEffect, useRef, useState } from 'react';\r\nimport ButtonGreen from '../../Buttons/ButtonGreen/ButtonGreen';\r\nimport './FormSum.css';\r\nimport Numpad from '../../Numpad/Numpad';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { inputRequestSum, withdrawalOfTheAmount } from '../../../reduxFold/actions/actionCreator';\r\nimport { parserBanknotes } from '../../../functions/functions';\r\n\r\nfunction FormSum(props) {\r\n    const { banknotes, inputSum } = useSelector( state => state.serviceBanknotes);\r\n    const dispatch = useDispatch();\r\n    const [ value, setValue ] = useState(inputSum);\r\n    const currentRef = useRef(null);\r\n    console.log(inputSum);\r\n\r\n    useEffect(() => {\r\n        if (value === 0) {\r\n            return;\r\n        }\r\n        const requiredSum = parseFloat(value) || 0;\r\n        const { requiredBanknotes, remains } = parserBanknotes(requiredSum, banknotes);\r\n        dispatch(inputRequestSum( requiredSum, requiredBanknotes, remains ));\r\n    }, [value])\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        dispatch(withdrawalOfTheAmount());\r\n        setValue('');\r\n    }\r\n    \r\n    const handleChange = (e) => {\r\n        const inputValue = e.target.value.replace(/[^0-9\\.]/g, '');\r\n        setValue(inputValue);\r\n    }\r\n\r\n    const addValue = (val) => {\r\n        currentRef.current.focus();\r\n        if (val === '.' && value.toString().includes(val)) {\r\n            return;\r\n        }\r\n        setValue(value.toString() + val);\r\n    }\r\n\r\n    const removeValue = () => {\r\n        currentRef.current.focus();\r\n        if (value.length === 0) {\r\n            return;\r\n        }\r\n        setValue(value.slice(0, value.length - 1));\r\n    }\r\n\r\n    return (\r\n        <div className=\"input-block\">\r\n            <form className='input-form' onSubmit={handleSubmit}>\r\n                <div className=\"input-block-field\">\r\n                    <label htmlFor=\"field-sum\" className='input-label'>\r\n                        Ведите сумму для снятия\r\n                    </label>\r\n                    <input className='field-input-sum' name='field-sum' \r\n                    id='field-sum' value={value} onChange={handleChange}\r\n                    placeholder='0' ref={currentRef} maxLength='12'/>\r\n                </div>\r\n                <ButtonGreen name={'выдача'} typeButton={'submit'}/>\r\n            </form>\r\n            <div className=\"numpad-block\">\r\n                <Numpad addValue={addValue} removeValue={removeValue}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FormSum;\r\n\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './BlockButtonMode.css';\r\nimport ButtonGreen from '../../Buttons/ButtonGreen/ButtonGreen';\r\nimport SetListBanknotes from '../SetListBanknotes/SetListBanknotes';\r\n\r\nfunction BlockButtonMode(props) {\r\n    const [ mode, setMode ] = useState( false );\r\n\r\n    const handleTriggerMode = (value) => {\r\n        setMode(value);\r\n    }\r\n\r\n    return (\r\n        <div className=\"block-button-mode\">\r\n            <ButtonGreen name={'набор купюр'} handleClick={() => handleTriggerMode(!mode)} />\r\n            <div className=\"sets-mode\">{mode && <SetListBanknotes handleTriggerMode={handleTriggerMode}/>}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nBlockButtonMode.propTypes = {\r\n\r\n};\r\n\r\nexport default BlockButtonMode;\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useSelector } from 'react-redux';\r\n\r\nfunction InfoOutputFields(props) {\r\n    const { sumToIssue, cancelleAmount } = useSelector( state => state.serviceBanknotes )\r\n\r\n    return (\r\n        <div className=\"info-output-fields\">\r\n            <div className=\"sum-block\">\r\n                <div className=\"sum-title\">Сумма к выдаче</div>\r\n                <div className=\"sum-field\">{sumToIssue.toFixed(0)}</div>\r\n            </div>\r\n            <div className=\"sum-block\">\r\n                <div className=\"sum-title\">Невыданная сумма</div>\r\n                <div className=\"sum-field\">{cancelleAmount.toFixed(2)}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nInfoOutputFields.propTypes = {\r\n\r\n};\r\n\r\nexport default InfoOutputFields;\r\n\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './MainPage.css';\r\nimport ButtonGrey from '../../Components/Buttons/ButtonGrey/ButtonGrey';\r\nimport VisionAllBunknotes from '../../Components/VisionAllBunknotes/VisionAllBunknotes';\r\nimport Reference from '../../Components/VisiableComponents/Reference/Reference';\r\nimport ButtonGreen from '../../Components/Buttons/ButtonGreen/ButtonGreen';\r\nimport SetSBanknotes from '../../Components/VisiableComponents/SetListBanknotes/SetListBanknotes';\r\nimport FormSum from '../../Components/Forms/FormSum/FormSum';\r\nimport BlockButtonMode from '../../Components/VisiableComponents/BlockButtonMode/BlockButtonMode';\r\nimport InfoOutputFields from '../../Components/VisiableComponents/InfoOutputFields/InfoOutputFields';\r\nimport { useSelector } from 'react-redux';\r\n\r\nfunction MainPage(props) {\r\n    const [ referense, setReference ] = useState( false );\r\n    const { requiredBanknotes } = useSelector( state => state.serviceBanknotes );\r\n\r\n    const handleTriggerReference = () => {\r\n        setReference(!referense);\r\n    }\r\n\r\n    return (\r\n        <div className='main-page'>\r\n            <div className=\"main-page-act-buttons\">\r\n                <BlockButtonMode />\r\n                <ButtonGrey name={'справка'} handleClick={handleTriggerReference}/>\r\n            </div>\r\n            <div className=\"display-output-bankotes\">\r\n                <div className=\"display-output-bankotes-title\">\r\n                    Банкноты, подготовленные к выдаче:\r\n                </div>\r\n                <VisionAllBunknotes banknotes={requiredBanknotes}/>\r\n            </div>\r\n            <InfoOutputFields />\r\n            <FormSum />\r\n            {referense && <Reference handleClick={handleTriggerReference}/>}\r\n        </div>\r\n    )\r\n}\r\n\r\nMainPage.propTypes = {\r\n\r\n};\r\n\r\nexport default MainPage;\r\n\r\n","import './App.css';\nimport MainPage from './pages/MainPage/MainPage';\n\nfunction App() {\n  return (\n    <div className=\"App app-container\">\n      <MainPage />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const setsBanknotes = [\r\n    {\r\n        fifty: 10000,\r\n        hundred: 8000,\r\n        twoHundred: 5000,\r\n        fiveHundred: 3000,\r\n        thousand: 1000,\r\n        twoThousand: 400,\r\n        fiveThousand: 100,\r\n    },\r\n    {\r\n        fifty: 3450,\r\n        hundred: 1643,\r\n        twoHundred: 234,\r\n        fiveHundred: 4362,\r\n        thousand: 6741,\r\n        twoThousand: 345,\r\n        fiveThousand: 467,\r\n    },\r\n    {\r\n        fifty: 234,\r\n        hundred: 2345,\r\n        twoHundred: 9654,\r\n        fiveHundred: 2451,\r\n        thousand: 845,\r\n        twoThousand: 678,\r\n        fiveThousand: 234,\r\n    },\r\n    {\r\n        fifty: 342,\r\n        hundred: 124,\r\n        twoHundred: 2154,\r\n        fiveHundred: 4365,\r\n        thousand: 2543,\r\n        twoThousand: 562,\r\n        fiveThousand: 546,\r\n    },\r\n    {\r\n        fifty: 3854,\r\n        hundred: 1257,\r\n        twoHundred: 3296,\r\n        fiveHundred: 7556,\r\n        thousand: 479,\r\n        twoThousand: 347,\r\n        fiveThousand: 2732,\r\n    },\r\n    {\r\n        fifty: 854,\r\n        hundred: 857,\r\n        twoHundred: 696,\r\n        fiveHundred: 356,\r\n        thousand: 279,\r\n        twoThousand: 147,\r\n        fiveThousand: 73,\r\n    },\r\n]\r\n\r\nexport default setsBanknotes;","import setsBanknotes from \"../../../DB/setsBanknotes\";\r\n\r\nconst initSet = {...setsBanknotes[0]}\r\n\r\nconst initState = {\r\n    banknotes: initSet,\r\n    amountSets: setsBanknotes.length,\r\n    sumToIssue: 0,\r\n    cancelleAmount: 0,\r\n    inputSum: 0,\r\n    requiredBanknotes: {\r\n        fifty: 0,\r\n        hundred: 0,\r\n        twoHundred: 0,\r\n        fiveHundred: 0,\r\n        thousand: 0,\r\n        twoThousand: 0,\r\n        fiveThousand: 0,\r\n    },\r\n}\r\n\r\nexport const serviceBanknotesReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'CHANGE_SET_BUNKNOTES': \r\n            const { id } = action.payload;\r\n            return {...initState, banknotes: {...setsBanknotes[id]}};\r\n        case 'INPUT_REQUEST_SUM':\r\n            const { inputSum, requiredBanknotes, cancelleAmount } = action.payload;\r\n            const sumToIssue = inputSum - cancelleAmount;\r\n            console.log(inputSum, requiredBanknotes, cancelleAmount);\r\n            return {...state, inputSum, requiredBanknotes, cancelleAmount, sumToIssue };\r\n        case 'WITHDRAWAL_OF_THE_AMOUNT':\r\n            const requiredBanknotesCount = {};\r\n            const banknotesArray = Object.keys(state.banknotes);\r\n            banknotesArray.forEach( item => requiredBanknotesCount[item] = state.banknotes[item] - state.requiredBanknotes[item])\r\n            return {...initState, banknotes: {...requiredBanknotesCount}};\r\n        default: \r\n            return {...state};\r\n    }\r\n}","import { combineReducers, createStore } from \"redux\";\r\nimport { serviceBanknotesReducer } from \"../reducers/serviceBanknotesReducer/serviceBanknotesReducer\";\r\n\r\nconst reducer = combineReducers({\r\n    serviceBanknotes: serviceBanknotesReducer,\r\n})\r\n\r\nconst store = createStore(reducer);\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './reduxFold/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}><App /></Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}